import{_ as i,p as l,q as e,a1 as t}from"./framework-204010b2.js";const a="/blog/img/web/css/inherited.jpg",r={},s=t('<h1 id="css-property" tabindex="-1"><a class="header-anchor" href="#css-property" aria-hidden="true">#</a> css-property</h1><h2 id="必须掌握的-css-属性" tabindex="-1"><a class="header-anchor" href="#必须掌握的-css-属性" aria-hidden="true">#</a> 必须掌握的 css 属性</h2><ol><li>定位(Position)和布局(Layout) <ul><li>position</li><li>top/bottom/left/right</li><li>z-index</li><li>float/clear</li><li>flexbox <ul><li>flex-direction</li><li>justify-content</li><li>align-items</li><li>...</li></ul></li></ul></li><li>展示(Display)和可见(Visibility) <ul><li>display</li><li>opacity</li><li>visibility</li></ul></li><li>盒子模型（Box Model）顺序 <ul><li>margin</li><li>box-shadow</li><li>border</li><li>border-radius</li><li>width/height</li><li>padding</li></ul></li><li>背景设置（Background） <ul><li>background</li></ul></li><li>字体（Font）、文本（Text） <ul><li>font-family/font-size/font-weight/font-style</li><li>line-height</li><li>text-align/text-transform</li><li>color</li></ul></li><li>其他属性（Other Property） <ul><li>overflow</li><li>clip</li><li>cursor</li><li>transform</li><li>animation、transition</li><li>white-space</li></ul></li></ol><h2 id="css-的属性继承" tabindex="-1"><a class="header-anchor" href="#css-的属性继承" aria-hidden="true">#</a> CSS 的属性继承</h2><p>CSS 的某些属性具有继承性(Inherited):</p><ul><li>如果一个属性具备继承性, 那么在该元素上设置后, 它的后代元素都可以继承这个属性;</li><li>当然, 如果后代元素自己有设置该属性, 那么优先使用后代元素自己的属性(不管继承过来的属性权重多高);</li></ul><p>常见的继承属性</p><p><img src="'+a+'" alt="继承"></p><h2 id="css-属性的层叠" tabindex="-1"><a class="header-anchor" href="#css-属性的层叠" aria-hidden="true">#</a> CSS 属性的层叠</h2><p>CSS 的翻译是层叠样式表, 什么是层叠呢?</p><ul><li>对于一个元素来说, 相同一个属性我们可以通过不同的选择器给它进行多次设置;</li><li>那么属性会被一层层覆盖上去;</li><li>但是最终只有一个会生效;</li></ul><p>那么多个样式属性覆盖上去, 哪一个会生效呢?</p><ul><li>判断一: 选择器的权重, 权重大的生效, 根据权重可以判断出优先级;</li><li>判断二: 先后顺序, 权重相同时, 后面设置的生效;</li></ul><h3 id="选择器的权重" tabindex="-1"><a class="header-anchor" href="#选择器的权重" aria-hidden="true">#</a> 选择器的权重</h3><p>为了方便比较 CSS 属性的优先级，可以给 CSS 属性所处的环境定义一个权值（权重）</p><ul><li>!important：10000</li><li>内联样式：1000</li><li>id 选择器：100</li><li>类选择器、属性选择器、伪类：10</li><li>元素选择器、伪元素：1</li><li>通配符：0</li></ul>',16),o=[s];function n(c,d){return l(),e("div",null,o)}const p=i(r,[["render",n],["__file","css-property.html.vue"]]);export{p as default};
