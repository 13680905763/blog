import{_ as t,M as e,p as l,q as i,R as a,t as p,N as o,a1 as n}from"./framework-204010b2.js";const c="/blog/img/web/html/html5-element/semanticization.jpg",u="/blog/img/web/html/html5-element/video.jpg",d="/blog/img/web/html/html5-element/audio.jpg",r={},m=n('<h1 id="html5-element" tabindex="-1"><a class="header-anchor" href="#html5-element" aria-hidden="true">#</a> html5-element</h1><h2 id="html5-语义化元素" tabindex="-1"><a class="header-anchor" href="#html5-语义化元素" aria-hidden="true">#</a> HTML5 语义化元素</h2><ul><li>我们往往过多的使用 div, 通过 id 或 class 来区分元素；</li><li>对于浏览器来说这些元素不够语义化；</li><li>对于搜索引擎来说, 不利于 SEO 的优化；</li></ul><p>HTML5 新增了语义化的元素：</p><ul><li>header：头部元素</li><li>nav：导航元素</li><li>section：定义文档某个区域的元素</li><li>article：内容元素</li><li>aside：侧边栏元素</li><li>footer：尾部元素</li></ul><p><img src="'+c+`" alt="semanticization"></p><h2 id="html5-其他新增元素" tabindex="-1"><a class="header-anchor" href="#html5-其他新增元素" aria-hidden="true">#</a> HTML5 其他新增元素</h2><p>HTML5 增加了对媒体类型的支持：</p><ul><li>音频：audio</li><li>视频：video</li></ul><p>Video 和 Audio 使用方式有两个：</p><ul><li>一方面我们可以直接通过元素使用 video 和 audio；</li><li>另一方面我们可以通过 JavaScript 的 API 对其进行控制；</li></ul><h3 id="video" tabindex="-1"><a class="header-anchor" href="#video" aria-hidden="true">#</a> video</h3><p>video 元素 用于在 HTML 或者 XHTML 文档中嵌入媒体播放器，用于支持文档内的视频播放。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./video/xx.mp4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>常见属性</li></ul><p><img src="`+u+`" alt="video"></p><ul><li>兼容性写法</li></ul><p>video&gt;元素中间的内容，是针对浏览器不支持此元素时候的降级处理。</p><ul><li>通过 source 元素指定更多视频格式的源;</li><li>通过 p/div 等元素指定在浏览器不支持 video 元素的情况, 显示的内容;</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./video/xx.mp4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./video/xx.webm<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>你的浏览器不支持h5的video播放，请更换浏览器重试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="audio" tabindex="-1"><a class="header-anchor" href="#audio" aria-hidden="true">#</a> audio</h3><p>audio 元素用于在文档中嵌入音频内容, 和 video 的用法非常类似</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./audio/xx.mp3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>常见属性</li></ul><p><img src="`+d+'" alt="audio"></p><ul><li>兼容性写法：同 video</li></ul><h2 id="input-元素的扩展内容" tabindex="-1"><a class="header-anchor" href="#input-元素的扩展内容" aria-hidden="true">#</a> input 元素的扩展内容</h2><p>HTML5 对 input 元素也进行了扩展，在之前我们已经学习过的其中几个属性也是 HTML5 的特性：</p><ul><li>placeholder：输入框的占位文字</li><li>multiple：多个值</li><li>autofocus：最多输入的内容</li></ul><p>另外对于 input 的 type 值也有很多扩展：</p>',30),h=a("li",null,"date",-1),k=a("li",null,"time",-1),v=a("li",null,"number",-1),g=a("li",null,"tel",-1),b=a("li",null,"color",-1),_=a("li",null,"email",-1),x={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input",target:"_blank",rel:"noopener noreferrer"},q=n(`<h2 id="新增全局属性-data" tabindex="-1"><a class="header-anchor" href="#新增全局属性-data" aria-hidden="true">#</a> 新增全局属性 data-*</h2><p>在 HTML5 中, 新增一种全局属性的格式 data-*, 用于自定义数据属性:</p><ul><li>data 设置的属性可以在 JavaScript 的 DOM 操作中通过 dataset 轻松获取到；</li><li>通常用于 HTML 和 JavaScript 数据之间的传递；</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sadpig<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-age</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>23<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>box<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javaScript line-numbers-mode" data-ext="javaScript"><pre class="language-javaScript"><code>const boxEl = document.querySelector(&#39;.box&#39;)
console.log(boxEl.dataset);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在小程序中, 就是通过 data-来传递数据的, 所以该全局属性必须要掌握</li></ul>`,6);function f(L,M){const s=e("ExternalLinkIcon");return l(),i("div",null,[m,a("ul",null,[h,k,v,g,b,_,a("li",null,[a("a",x,[p("等等..."),o(s)])])]),q])}const H=t(r,[["render",f],["__file","html5-element.html.vue"]]);export{H as default};
