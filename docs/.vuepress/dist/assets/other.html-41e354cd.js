import{_ as a,p as t,q as s,a1 as e}from"./framework-204010b2.js";const n="/blog/img/web/html/other-thank.jpg",o="/blog/img/web/html/字符实体.jpg",r="/blog/img/web/html/other-seo.jpg",i={},p=e(`<h1 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h1><h2 id="字符实体" tabindex="-1"><a class="header-anchor" href="#字符实体" aria-hidden="true">#</a> 字符实体</h2><h3 id="思考-浏览器如何解析如下代码" tabindex="-1"><a class="header-anchor" href="#思考-浏览器如何解析如下代码" aria-hidden="true">#</a> 思考，浏览器如何解析如下代码</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>&lt;haha<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当我们的内容出现了&lt;，浏览器会将其后面的文本识别为一个标签（tag）,并且帮我们自动补充结束标签</p><p><img src="`+n+'" alt="思考"></p><p>然而我们只是想显示一个小于符号，这个时候我们就可以使用<strong>字符实体</strong>；</p><p>HTML 字符实体是一段<strong>以 &amp; 开头、以 ; 结尾的文本</strong></p><p>通常用于显示<strong>保留字</strong>（这些字符会被解析为 HTML 代码）和不可见的字符（如“不换行空格”），也可以用实体来代替其他难以用标准键盘键入的字符</p><p><img src="'+o+'" alt="字符实体"></p><h2 id="seo" tabindex="-1"><a class="header-anchor" href="#seo" aria-hidden="true">#</a> SEO</h2><p>搜索引擎优化（search engine optimization）是通过了解搜索引擎的运作规则来调整网站，以提高网站在有关搜索引擎内排名的方式。</p><p><img src="'+r+'" alt="seo"></p><p>以蛋糕网站为例，当用户在百度搜索<strong>蛋糕</strong>时百度拿到搜索的关键字会在索引区拿到搜索结果返回给用户，而我们的蛋糕网站合理的运用了元素语义化（像标题我们用 h1 写 xxx 蛋糕，而不是用 div/span/p，因为在搜索引擎爬数据的时候 h1 的权重会比 div 高）我们的网站在返回结果中会更加靠前。</p>',14),c=[p];function h(l,d){return t(),s("div",null,c)}const m=a(i,[["render",h],["__file","other.html.vue"]]);export{m as default};
