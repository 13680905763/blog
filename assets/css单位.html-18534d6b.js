import{_ as i,p as l,q as e,a1 as s}from"./framework-204010b2.js";const a="/blog/img/web/css/css-units/absolute-length-units1.jpg",t="/blog/img/web/css/css-units/absolute-length-units2.jpg",n="/blog/img/web/css/css-units/relative-length-units.jpg",r="/blog/img/web/css/css-units/pixel.jpg",c="/blog/img/web/css/css-units/Retina1.jpg",p="/blog/img/web/css/css-units/Retina2.jpg",u={},o=s('<h1 id="css-中的单位" tabindex="-1"><a class="header-anchor" href="#css-中的单位" aria-hidden="true">#</a> css 中的单位</h1><p>CSS 中还有非常多的长度单位，整体可以分成两类：</p><ul><li>绝对长度单位（Absolute length units）；</li><li>相对长度单位（Relative length units）；</li></ul><h2 id="绝对单位" tabindex="-1"><a class="header-anchor" href="#绝对单位" aria-hidden="true">#</a> 绝对单位</h2><ul><li>它们与其他任何东西都没有关系，通常被认为总是相同的大小。</li><li>这些值中的大多数在用于打印时比用于屏幕输出时更有用，例如，我们通常不会在屏幕上使用 cm。</li><li>唯一一个您经常使用的值，就是 px(像素)</li></ul><p><img src="'+a+'" alt="absolute-length-units1"><img src="'+t+'" alt="absolute-length-units2"></p><h2 id="相对单位" tabindex="-1"><a class="header-anchor" href="#相对单位" aria-hidden="true">#</a> 相对单位</h2><ul><li>相对长度单位 <ul><li>相对长度单位相对于其他一些东西；</li><li>比如父元素的字体大小，或者视图端口的大小；</li><li>使用相对单位的好处是，经过一些仔细的规划，您可以使文本或其他元素的大小与页面上的其他内容相对应；</li></ul></li><li>em： <ul><li>元素的字号</li></ul></li><li>rem： <ul><li>根元素的字体大小</li></ul></li><li>vw/wh <ul><li>1% of viewport&#39;s width/height</li></ul></li></ul><p><img src="'+n+'" alt="relative-length-units2"></p><h2 id="pixel" tabindex="-1"><a class="header-anchor" href="#pixel" aria-hidden="true">#</a> pixel</h2><p>px 是 pixel 单词的缩写，翻译为像素。</p><ul><li>像素是影响显示的基本单位。（比如屏幕上看到的画面、一幅图片）；</li><li>pix 是英语单词 picture 的常用简写，加上英语单词“元素”element，就得到 pixel；</li><li>“像素”表示“画像元素”之意，有时亦被称为 pel（picture element）</li></ul><p><img src="'+r+`" alt="pixel"></p><h3 id="像素的不同分类" tabindex="-1"><a class="header-anchor" href="#像素的不同分类" aria-hidden="true">#</a> 像素的不同分类</h3><p>像素单位常见的有三种像素名称：</p><ul><li>设备像素（物理像素）；</li><li>设备独立像素（逻辑像素）；</li><li>CSS 像素；</li></ul><h3 id="物理像素和逻辑像素" tabindex="-1"><a class="header-anchor" href="#物理像素和逻辑像素" aria-hidden="true">#</a> 物理像素和逻辑像素</h3><ul><li><p>设备像素，也叫物理像素。</p><ul><li>设备像素指的是显示器上的真实像素，每个像素的大小是屏幕固有的属性，屏幕出厂以后就不会改变了；</li><li>我们在购买显示器或者手机的时候，提到的设备分辨率就是设备像素的大小；</li><li>比如 iPhone X 的分辨率 1125x2436，指的就是设备像素；</li></ul></li><li><p>设备独立像素，也叫逻辑像素。</p><ul><li>如果面向开发者我们使用设备像素显示一个 100px 的宽度，那么在不同屏幕上显示效果会是不同的；</li><li>开发者针对不同的屏幕很难进行较好的适配，编写程序必须了解用户的分辨率来进行开发；</li><li>所以在设备像素之上，操作系统为开发者进行抽象，提供了逻辑像素的概念；</li><li>比如你购买了一台显示器，在操作系统上是以 1920x1080 设置的显示分辨率，那么无论你购买的是 2k、4k 的显示器，对于开发者来说，都是 1920x1080 的大小。</li></ul></li><li><p>CSS 像素</p><ul><li>CSS 中我们经常使用的单位也是 pixel，它在默认情况下等同于设备独立像素（也就是逻辑像素）；</li><li>毕竟逻辑像素才是面向我们开发者的；</li></ul></li><li><p>我们可以通过 JavaScript 中的 screen.width 和 screen.height 获取到电脑的逻辑分辨率：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> screenHeight <span class="token operator">=</span> screen<span class="token punctuation">.</span>height
<span class="token keyword">const</span> screenWidth <span class="token operator">=</span> screen<span class="token punctuation">.</span>width
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="dpr、ppi" tabindex="-1"><a class="header-anchor" href="#dpr、ppi" aria-hidden="true">#</a> DPR、PPI</h3><ul><li>DPR：device pixel ratio <ul><li>2010 年，iPhone4 问世，不仅仅带来了移动互联网，还带来了 Retina 屏幕；</li><li>Retina 屏幕翻译为视网膜显示屏，可以为用户带来更好的显示；</li><li>在 Retina 屏幕中，一个逻辑像素在长度上对应两个物理像素，这个比例称之为设备像素比（device pixel ratio）； <img src="`+c+'" alt="Retina1"><img src="'+p+'" alt="Retina2"></li><li>我们可以通过 window.devicePixelRatio 获取到当前屏幕上的 DPR 值；</li></ul></li><li>PPI（了解）：每英寸像素（英语：Pixels Per Inch，缩写：PPI） <ul><li>通常用来表示一个打印图像或者显示器上像素的密度；</li><li>前面我们提过 1 英寸=2.54 厘米，在工业领域被广泛应用；</li></ul></li></ul>',20),h=[o];function d(g,m){return l(),e("div",null,h)}const _=i(u,[["render",d],["__file","css单位.html.vue"]]);export{_ as default};
