import{_ as t,M as r,p as o,q as d,R as i,t as l,N as a,a1 as n}from"./framework-204010b2.js";const s="/blog/img/web/css/box-model/box-model.jpg",h="/blog/img/web/css/box-model/border-style.jpg",c="/blog/img/web/css/box-model/margin-collapse.jpg",p={},u=n('<h1 id="盒子模型" tabindex="-1"><a class="header-anchor" href="#盒子模型" aria-hidden="true">#</a> 盒子模型</h1><h2 id="concept" tabindex="-1"><a class="header-anchor" href="#concept" aria-hidden="true">#</a> concept</h2><p>HTML 中的每一个元素都可以看做是一个盒子，可以具备这 4 个属性</p><ul><li>内容（content） <ul><li>元素的内容 width/height</li></ul></li><li>内边距（padding） <ul><li>元素和内容之间的间距</li></ul></li><li>边框（border） <ul><li>元素自己的边框</li></ul></li><li>外边距（margin） <ul><li>元素和其他元素之间的间距</li></ul></li></ul><p><img src="'+s+'" alt="box-model"></p><h2 id="content-–-width-and-height" tabindex="-1"><a class="header-anchor" href="#content-–-width-and-height" aria-hidden="true">#</a> content – width and height</h2><ul><li>设置内容是通过宽度和高度设置的: <ul><li>宽度设置: width</li><li>高度设置: height</li></ul></li><li>注意: 对于<strong>行内级非替换元素</strong>来说, 设置<strong>宽高是无效</strong>的!</li><li>另外我们还可以设置如下属性: <ul><li>min-width：最小宽度，无论内容多少，宽度都大于或等于 min-width</li><li>max-width：最大宽度，无论内容多少，宽度都小于或等于 max-width</li><li><strong>移动端适配</strong>时, 可以设置最大宽度和最小宽度;</li></ul></li><li>下面两个属性不常用: <ul><li>min-height：最小高度，无论内容多少，高度都大于或等于 min-height</li><li>max-height：最大高度，无论内容多少，高度都小于或等于 max-height</li></ul></li></ul><h2 id="padding" tabindex="-1"><a class="header-anchor" href="#padding" aria-hidden="true">#</a> padding</h2><ul><li>padding 用于设置盒子的内边距, 通常用于设置边框和内容之间的间距;</li><li>padding 四个方向: <ul><li>padding-top：上内边距</li><li>padding-right：右内边距</li><li>padding-bottom：下内边距</li><li>padding-left：左内边距</li></ul></li><li>padding 单独编写是一个缩写属性： <ul><li>四个值：上右下左, 顺时针转动的</li><li>三个值：上 左右 下</li><li>两个值：上下，左右</li><li>一个值：全部</li></ul></li></ul><h2 id="border" tabindex="-1"><a class="header-anchor" href="#border" aria-hidden="true">#</a> border</h2><p>边框相对于 content/padding/margin 来说特殊一些:</p><ul><li>边框具备宽度</li><li>边框具备样式</li><li>边框具备颜色</li></ul><p><img src="'+h+`" alt="border-style"></p><p>设置某一方向的边框</p><ul><li>border-top</li><li>border-right</li><li>border-bottom</li><li>border-left</li></ul><p>设置 4 个方向的边框</p><ul><li>border</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">border</span><span class="token punctuation">:</span> &lt;line-width&gt; || &lt;line-style&gt; || &lt;color&gt;<span class="token punctuation">;</span> // 顺序任意
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,18),g={href:"https://css-tricks.com/the-shapes-of-css/#top-of-site",target:"_blank",rel:"noopener noreferrer"},m=n('<h2 id="border-radius" tabindex="-1"><a class="header-anchor" href="#border-radius" aria-hidden="true">#</a> border-radius</h2><p>设置盒子的圆角 border-radius 常见的值:</p><ul><li>数值: 通常用来设置小的圆角, 比如 6px;</li><li>百分比: 通常用来设置一定的弧度或者圆形;</li></ul><h2 id="margin" tabindex="-1"><a class="header-anchor" href="#margin" aria-hidden="true">#</a> margin</h2><p>设置盒子的外边距, 通常用于元素和元素之间的间距;</p><p><em>取值见 padding</em>.</p><h3 id="上下-margin-的传递" tabindex="-1"><a class="header-anchor" href="#上下-margin-的传递" aria-hidden="true">#</a> 上下 margin 的传递</h3><ol><li>margin-top 传递 <ul><li>如果块级元素的顶部线和父元素的顶部线重叠，那么这个块级元素的 margin-top 值会传递给父元素</li></ul></li><li>margin-bottom 传递 <ul><li>如果块级元素的底部线和父元素的底部线重写，并且父元素的高度是 auto，那么这个块级元素的 margin-bottom 值会传递给父元素</li></ul></li></ol><p>如何防止出现传递</p><ul><li>给父元素设置 padding-top\\padding-bottom</li><li>给父元素设置 border</li><li>触发 BFC: 设置 overflow 为 auto</li></ul><p>[<strong>建议</strong>]</p><ul><li>margin 一般是用来设置兄弟元素之间的间距</li><li>padding 一般是用来设置父子元素之间的间距</li></ul><h3 id="上下-margin-的折叠" tabindex="-1"><a class="header-anchor" href="#上下-margin-的折叠" aria-hidden="true">#</a> 上下 margin 的折叠</h3><ol><li>垂直方向上相邻的 2 个 margin（margin-top、margin-bottom）有可能会合并为 1 个 margin，这种现象叫做 collapse（折叠）</li><li>水平方向上的 margin 不会 collapse</li><li>折叠后最终值的计算规则 <ul><li>两个值进行比较，取较大的值</li></ul></li></ol><p>如何防止 margin collapse？</p><ul><li>只设置其中一个元素的 margin</li></ul><p><img src="'+c+'" alt="margin-collapse"></p>',17),b={id:"外轮廓-outline",tabindex:"-1"},x=i("a",{class:"header-anchor",href:"#外轮廓-outline","aria-hidden":"true"},"#",-1),_={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/outline",target:"_blank",rel:"noopener noreferrer"},f=n(`<p>outline 跟 border 很像</p><ul><li>outline 不占据空间，绘制于元素内容周围</li></ul><h2 id="box-shadow" tabindex="-1"><a class="header-anchor" href="#box-shadow" aria-hidden="true">#</a> box-shadow</h2><p>设置一个或者多个阴影</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">box-shadow: none | &lt;shadow&gt;#
shadow : &lt;color&gt;? &amp;&amp; [ &lt;length&gt;</span><span class="token punctuation">{</span>2<span class="token punctuation">}</span> &lt;length [0<span class="token punctuation">,</span> ∞]&gt;? &lt;length&gt;? ] &amp;&amp; inset?<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>第 1 个 length：offset-x, 水平方向的偏移，正数往右偏移</li><li>第 2 个 length：offset-y, 垂直方向的偏移，正数往下偏移</li><li>第 3 个 length：blur-radius, 模糊半径</li><li>第 4 个 length：spread-radius, 延伸半径</li><li>color：阴影的颜色，如果没有设置，就跟随 color 属性的颜色</li><li>inset：外框阴影变成内框阴影</li></ul>`,6),w={href:"https://html-css-js.com/css/generator/box-shadow/",target:"_blank",rel:"noopener noreferrer"},v=i("h2",{id:"text-shadow",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#text-shadow","aria-hidden":"true"},"#"),l(" text-shadow")],-1),k=i("p",null,"text-shadow 用法类似于 box-shadow，用于给文字添加阴影效果",-1),N={href:"https://html-css-js.com/css/generator/box-shadow/",target:"_blank",rel:"noopener noreferrer"},j=n('<h2 id="行内非替换元素的注意事项" tabindex="-1"><a class="header-anchor" href="#行内非替换元素的注意事项" aria-hidden="true">#</a> 行内非替换元素的注意事项</h2><ul><li>以下属性对行内级非替换元素不起作用 <ul><li>width、height、margin-top、margin-bottom</li></ul></li><li>以下属性对行内级非替换元素的效果比较特殊 <ul><li>padding-top、padding-bottom、上下方向的 border</li></ul></li></ul><h2 id="box-sizing" tabindex="-1"><a class="header-anchor" href="#box-sizing" aria-hidden="true">#</a> box-sizing</h2><ol><li>content-box （标准盒子模型） <ul><li>padding、border 都布置在 width、height 外边</li></ul></li><li>border-box （IE 盒子模型） <ul><li>padding、border 都布置在 width、height 里边</li></ul></li></ol><h2 id="元素的水平居中方案" tabindex="-1"><a class="header-anchor" href="#元素的水平居中方案" aria-hidden="true">#</a> 元素的水平居中方案</h2><p>行内级元素(包括 inline-block 元素)</p><ul><li>水平居中：在父元素中设置 text-align: center</li></ul><p>块级元素</p><ul><li>水平居中：margin: 0 auto</li></ul>',9);function y(z,B){const e=r("ExternalLinkIcon");return o(),d("div",null,[u,i("p",null,[i("a",g,[l("利用 border 画形状"),a(e)])]),m,i("h2",b,[x,l(" 外轮廓 - "),i("a",_,[l("outline"),a(e)])]),f,i("p",null,[i("a",w,[l("阴影调试"),a(e)])]),v,k,i("p",null,[i("a",N,[l("文字阴影调试"),a(e)])]),j])}const E=t(p,[["render",y],["__file","box-model.html.vue"]]);export{E as default};
