import{_ as i,M as l,p as a,q as s,R as e,t as r,N as t,a1 as n}from"./framework-204010b2.js";const u="/blog/img/computer/encounter/soft.jpg",c="/blog/img/computer/encounter/url1.jpg",h="/blog/img/computer/encounter/url2.jpg",d="/blog/img/computer/encounter/url3.jpg",p="/blog/img/computer/encounter/uri.jpg",_="/blog/img/computer/encounter/字符编码.jpg",m={},g=e("h1",{id:"邂逅",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#邂逅","aria-hidden":"true"},"#"),r(" 邂逅")],-1),f=e("h2",{id:"软件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#软件","aria-hidden":"true"},"#"),r(" 软件")],-1),b={href:"https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6/12053",target:"_blank",rel:"noopener noreferrer"},R=e("strong",null,"计算机指令",-1),U=e("li",null,[r("软件开发是什么呢?就是告诉"),e("strong",null,"计算机一系列的指令"),r("，这些指令也称之为"),e("strong",null,"程序")],-1),B=n('<h2 id="软件与应用程序" tabindex="-1"><a class="header-anchor" href="#软件与应用程序" aria-hidden="true">#</a> 软件与应用程序</h2><ul><li>应用程序、算法、编程语言、操作系统 都是软件</li></ul><p><em>引用一副图</em> .</p><p><img src="'+u+'" alt="区别"></p><h2 id="url-与-uri" tabindex="-1"><a class="header-anchor" href="#url-与-uri" aria-hidden="true">#</a> URL 与 URI</h2><h3 id="url" tabindex="-1"><a class="header-anchor" href="#url" aria-hidden="true">#</a> URL</h3><p>统一资源定位符（Uniform Resource Locator）通俗的说就是一个资源在 Web 上的地址。</p><ul><li>理论上说，每个有效的 URL 都指向一个唯一的资源；</li><li>这个资源可以是一个 HTML 页面，一个 CSS 文档，一幅图像，等等</li></ul><p><img src="'+c+'" alt="URL1"></p><p>URL 的格式</p><p><strong>[协议类型]://[服务器地址]:[端口号]/[文件路径][文件名]?[查询]#[片段 ID]</strong></p><p><img src="'+h+'" alt="URL2"><img src="'+d+'" alt="URL3"></p><h3 id="url-、uri-、urn" tabindex="-1"><a class="header-anchor" href="#url-、uri-、urn" aria-hidden="true">#</a> URL 、URI 、URN</h3><p>url,urn 都是 uri <img src="'+p+'" alt="URI"></p>',14),E={href:"https://baike.baidu.com/item/URI/2901761?fr=aladdin",target:"_blank",rel:"noopener noreferrer"},x=e("strong",null,"标志符",-1),L={href:"https://baike.baidu.com/item/%E7%BB%9F%E4%B8%80%E8%B5%84%E6%BA%90%E5%AE%9A%E4%BD%8D%E7%B3%BB%E7%BB%9F?fromtitle=url&fromid=110640&fromModule=lemma_search-box",target:"_blank",rel:"noopener noreferrer"},k=e("strong",null,"定位符",-1),I={href:"https://baike.baidu.com/item/%E7%BB%9F%E4%B8%80%E8%B5%84%E6%BA%90%E5%90%8D%E7%A7%B0?fromtitle=URN&fromid=2901667&fromModule=lemma_search-box",target:"_blank",rel:"noopener noreferrer"},N=e("strong",null,"名称",-1),j=n('<p>uri 是一个比较抽象的概念，而 url 和 urn 可以理解成继承至 uri，是 uri 的具体表现，uri 用于标识一个资源，这种标识允许我们对资源通过特定的协议进行交互操作，像我们可以通过定位的方式使用 url 获取一个资源，也可以用过名称的方式 urn 获取一个资源。</p><p>但是 url 的缺点是当我们资源的位置发生了变化，url 的地址也要随之改变，而 urn 的目的是好比通过一个标识名标识一个资源后，无论该资源的位置发生多少变化，我们都能通过标识名精准访问到该资源，但由于技术等原理，该方法并未实现。统一资源名仍然有因特网工程工作组（IETF）的成员在继续开发。</p><p><strong>locators are also identifiers, so every URL is also a URI, but there are URIs which are not URLs</strong>.</p><h2 id="字符编码" tabindex="-1"><a class="header-anchor" href="#字符编码" aria-hidden="true">#</a> 字符编码</h2><p>计算机是干什么的?</p><ul><li>计算机一开始发明出来时是用来解决数字计算问题的，后来人们发现，计算机还可以做更多的事，例如文本处理。</li><li>但计算机其实挺笨的，它只认识 010110111000…这样由 0 和 1 两个数字组成的二进制数字；</li><li>这是因为计算机的底层硬件实现就是用电路的开和闭两种状态来表示 0 和 1 两个数字的。</li><li>因此，计算机只可以直接存储和处理二进制数字。</li></ul><p>为了在计算机上也能表示、存储和处理像文字、符号等等之类的字符，就必须将这些字符转换成二进制数字。</p><ul><li>当然，肯定不是我们想怎么转换就怎么转换，否则就会造成同一段二进制数字在不同计算机上显示出来的字符不一样的情况，因此必须得定一个统一的、标准的转换规则 <img src="'+_+'" alt="字符编码"></li></ul>',8),A={href:"https://www.jianshu.com/p/899e749be47c",target:"_blank",rel:"noopener noreferrer"};function D(F,v){const o=l("ExternalLinkIcon");return a(),s("div",null,[g,f,e("ul",null,[e("li",null,[e("a",b,[r("专业的软件定义"),t(o)]),r("：一系列按照特定顺序组织的"),R]),U]),B,e("ul",null,[e("li",null,[e("a",E,[r("URI"),t(o)]),r(" = Uniform Resource Identifier 统一资源"),x,r("，用于标识 Web 技术使用的逻辑或物理资源。；")]),e("li",null,[e("a",L,[r("URL"),t(o)]),r(" = Uniform Resource Locator 统一资源"),k,r("，俗称网络地址，相当于网络中的门牌号；")]),e("li",null,[e("a",I,[r("URN"),t(o)]),r(" = Uniform Resource Name 统一资源"),N,r("，是带有名字的因特网资源；")])]),j,e("p",null,[e("a",A,[r("了解更多"),t(o)])])])}const M=i(m,[["render",D],["__file","index.html.vue"]]);export{M as default};
