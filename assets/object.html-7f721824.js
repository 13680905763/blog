import{_ as n,p as a,q as s,a1 as t}from"./framework-204010b2.js";const e={},i=t(`<h1 id="object" tabindex="-1"><a class="header-anchor" href="#object" aria-hidden="true">#</a> object</h1><h2 id="control-over-attribute-operations" tabindex="-1"><a class="header-anchor" href="#control-over-attribute-operations" aria-hidden="true">#</a> Control over attribute operations</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> descriptor<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="attribute-descriptor-classification" tabindex="-1"><a class="header-anchor" href="#attribute-descriptor-classification" aria-hidden="true">#</a> Attribute Descriptor Classification</h2><ul><li>数据属性（Data Properties）描述符（Descriptor）；</li><li>存取属性（Accessor 访问器 Properties）描述符（Descriptor）；</li></ul><table><thead><tr><th></th><th>configurable</th><th>enumerable</th><th>writable</th><th>value</th><th>get</th><th>set</th></tr></thead><tbody><tr><td>数据描述符</td><td>可以</td><td>可以</td><td>可以</td><td>可以</td><td>不可以</td><td>不可以</td></tr><tr><td>存取描述符</td><td>可以</td><td>可以</td><td>不可以</td><td>不可以</td><td>可以</td><td>可以</td></tr></tbody></table><ul><li>configurable：表示属性是否可以通过 delete 删除属性，是否可以修改它的特性，是否可以将它修改为存取属性描述符</li><li>enumerable：表示属性是否可以通过 for-in 或者 Object.keys()返回该属性</li><li>writable：表示是否可以修改属性的值；</li><li>value：属性的 value 值，读取属性时会返回该值，修改属性时，会对其进行修改；</li><li>get：Functions that will be executed when obtaining properties</li><li>set：Functions that will be executed when setting properties</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  _age <span class="token operator">=</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;why&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">get</span><span class="token operator">:</span> <span class="token function">funciton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_age
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[i];function p(r,l){return a(),s("div",null,o)}const d=n(e,[["render",p],["__file","object.html.vue"]]);export{d as default};
